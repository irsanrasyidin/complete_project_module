// Code generated by MockGen. DO NOT EDIT.
// Source: login.go

// Package mock_repositories is a generated GoMock package.
package mock_repositories

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	models "github.com/irsanrasyidin/complete_project_module/models"
)

// MockLoginRepo is a mock of LoginRepo interface.
type MockLoginRepo struct {
	ctrl     *gomock.Controller
	recorder *MockLoginRepoMockRecorder
}

// MockLoginRepoMockRecorder is the mock recorder for MockLoginRepo.
type MockLoginRepoMockRecorder struct {
	mock *MockLoginRepo
}

// NewMockLoginRepo creates a new mock instance.
func NewMockLoginRepo(ctrl *gomock.Controller) *MockLoginRepo {
	mock := &MockLoginRepo{ctrl: ctrl}
	mock.recorder = &MockLoginRepoMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockLoginRepo) EXPECT() *MockLoginRepoMockRecorder {
	return m.recorder
}

// LoginUser mocks base method.
func (m *MockLoginRepo) LoginUser(user models.UserCredential) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "LoginUser", user)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// LoginUser indicates an expected call of LoginUser.
func (mr *MockLoginRepoMockRecorder) LoginUser(user interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "LoginUser", reflect.TypeOf((*MockLoginRepo)(nil).LoginUser), user)
}
